#ifndef KEYSTONE_V3_MODEL_AUTH_HPP_
#define KEYSTONE_V3_MODEL_AUTH_HPP_

#include "REST/JsonSerializable.hpp"
#include "Keystone/V3/Model/Identity.hpp"
#include "Keystone/V3/Model/Scope.hpp"
#include <memory>
#include <string>

namespace Keystone {
  namespace V3 {
    namespace Model {

      struct Auth : public REST::JsonSerializable {
        typedef std::shared_ptr<Auth> Ptr;
        Auth();
        static Ptr fromJson(const REST::Json &json);
        virtual REST::Json toJson() const;
        virtual ~Auth();

        Identity::Ptr identity;
        Scope::Ptr scope;
      };

    } /* Model */
  } /* V3 */
} /* Keystone */

#endif /* KEYSTONE_V3_MODEL_AUTH_HPP_ */
